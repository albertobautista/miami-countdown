---
import { orderedEvents } from "@/data/events";
import Layout from "@/layouts/Layout.astro";
import Countdown from "@/components/Countdown.astro";
import BouncingImage from "@/components/BouncingImage";

const { id } = Astro.params;
const event = orderedEvents.find((e) => e.id === id);

export async function getStaticPaths() {
  return orderedEvents.map((event) => ({
    params: { id: event.id },
    props: { event },
  }));
}

if (!event) {
  throw new Error("Evento no encontrado");
}
const DEFAULT_POSITION = 50;
---

<Layout title={event.title} description={event.description} event={event}>
  <main class="relative w-full h-screen overflow-hidden">
    <Countdown timestamp={event.timestamp} colorClass={event.colorClass} />
    {
      event.people &&
        event.people.length > 0 &&
        event.people.map((person, index) => (
          <BouncingImage
            imgSrc={`/img/faces/${person}.png`}
            leftPosition={
              DEFAULT_POSITION * (index % 2 === 0 ? index + 1 : index + 5)
            }
            topPosition={
              DEFAULT_POSITION * (index % 2 === 0 ? index + 1 : index + 5)
            }
            client:load
          />
        ))
    }
  </main>

  <style is:global>
    .lights-background {
      background: url({event.backgroundImage});
      background-size: cover;
    }
  </style>
</Layout>
